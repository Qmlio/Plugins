import QtQuick.tooling 1.2

// This file describes the plugin-supplied types contained in the library.
// It is used for QML tooling purposes only.
//
// This file was auto-generated by:
// 'qmlplugindump QmlioFirebase 1.0'

Module {
    dependencies: []
    Component {
        name: "qmlio::googleFirebase::DatabaseQuery"
        prototype: "QObject"
        exports: ["DatabaseQuery 1.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "tag"; type: "string" }
        Property { name: "database"; type: "FirebaseDatabase"; isPointer: true }
        Property { name: "priority"; type: "int" }
        Signal {
            name: "completed"
            Parameter { name: "type"; type: "int" }
            Parameter { name: "value"; type: "QByteArray" }
        }
        Signal {
            name: "childAdded"
            Parameter { name: "value"; type: "QVariant" }
            Parameter { name: "previousChild"; type: "string" }
        }
        Signal {
            name: "childChanged"
            Parameter { name: "value"; type: "QVariant" }
            Parameter { name: "previousChild"; type: "string" }
        }
        Signal {
            name: "childMoved"
            Parameter { name: "value"; type: "QVariant" }
            Parameter { name: "previousChild"; type: "string" }
        }
        Signal {
            name: "childRemoved"
            Parameter { name: "value"; type: "QVariant" }
        }
        Signal {
            name: "valueChanged"
            Parameter { name: "value"; type: "QVariant" }
        }
        Signal {
            name: "databaseReady"
            Parameter { name: "isReady"; type: "bool" }
        }
        Method {
            name: "child"
            type: "qmlio::googleFirebase::DatabaseQuery*"
            Parameter { name: "str"; type: "string" }
        }
        Method { name: "currentPath"; type: "QStringList" }
        Method {
            name: "setValue"
            Parameter { name: "value"; type: "QVariant" }
        }
        Method {
            name: "getValue"
            Parameter { name: "isQuery"; type: "bool" }
        }
        Method { name: "getValue" }
        Method { name: "pushChild"; type: "qmlio::googleFirebase::DatabaseQuery*" }
        Method { name: "removeValue" }
        Method { name: "key"; type: "string" }
        Method { name: "addChildListner" }
        Method { name: "addValueListner" }
        Method {
            name: "orderByChild"
            type: "qmlio::googleFirebase::DatabaseQuery*"
            Parameter { name: "path"; type: "string" }
        }
        Method { name: "orderByKey"; type: "qmlio::googleFirebase::DatabaseQuery*" }
        Method { name: "orderByPriority"; type: "qmlio::googleFirebase::DatabaseQuery*" }
        Method { name: "orderByValue"; type: "qmlio::googleFirebase::DatabaseQuery*" }
        Method {
            name: "startAt"
            type: "qmlio::googleFirebase::DatabaseQuery*"
            Parameter { name: "order_value"; type: "QVariant" }
            Parameter { name: "key"; type: "string" }
        }
        Method {
            name: "startAt"
            type: "qmlio::googleFirebase::DatabaseQuery*"
            Parameter { name: "order_value"; type: "QVariant" }
        }
        Method {
            name: "endAt"
            type: "qmlio::googleFirebase::DatabaseQuery*"
            Parameter { name: "order_value"; type: "QVariant" }
        }
        Method {
            name: "equalTo"
            type: "qmlio::googleFirebase::DatabaseQuery*"
            Parameter { name: "order_value"; type: "QVariant" }
        }
        Method {
            name: "limitToFirst"
            type: "qmlio::googleFirebase::DatabaseQuery*"
            Parameter { name: "limit"; type: "uint" }
        }
        Method {
            name: "limitToLast"
            type: "qmlio::googleFirebase::DatabaseQuery*"
            Parameter { name: "limit"; type: "uint" }
        }
    }
    Component {
        name: "qmlio::googleFirebase::FirebaseAuth"
        prototype: "QObject"
        exports: ["QmlioAuth 1.0"]
        exportMetaObjectRevisions: [0]
        Enum {
            name: "Error"
            values: {
                "ErrorNone": 0,
                "ErrorUnimplemented": -1,
                "ErrorFailure": 1
            }
        }
        Enum {
            name: "Action"
            values: {
                "ActionRegister": 0,
                "ActionSendEmailVerification": 1,
                "ActionSignIn": 2,
                "ActionSignOut": 3,
                "ActionDeleteUser": 4,
                "UpdateUserCredentials": 5,
                "ActionResetEmail": 6,
                "ActionUpdateEmail": 7,
                "ActionUpdatePassword": 8
            }
        }
        Enum {
            name: "Credential"
            values: {
                "Anonymously": 0,
                "GoogleSignIn": 1,
                "FaceBookSignIn": 2
            }
        }
        Property { name: "running"; type: "bool"; isReadonly: true }
        Property { name: "signedIn"; type: "bool"; isReadonly: true }
        Signal {
            name: "taskFinished"
            Parameter { name: "success"; type: "bool" }
            Parameter { name: "actionId"; type: "int" }
            Parameter { name: "user"; type: "QVariantMap" }
        }
        Signal {
            name: "completed"
            Parameter { name: "success"; type: "bool" }
            Parameter { name: "actionId"; type: "int" }
            Parameter { name: "user"; type: "QVariantMap" }
        }
        Signal { name: "passwordResetEmailSent" }
        Signal { name: "credentialIdReceived" }
        Signal {
            name: "errorChanged"
            Parameter { name: "errId"; type: "int" }
            Parameter { name: "errMsg"; type: "string" }
        }
        Signal {
            name: "initialised"
            Parameter { name: "ready"; type: "bool" }
        }
        Method {
            name: "registerUser"
            Parameter { name: "email"; type: "string" }
            Parameter { name: "pass"; type: "string" }
        }
        Method {
            name: "signIn"
            Parameter { name: "email"; type: "string" }
            Parameter { name: "pass"; type: "string" }
        }
        Method {
            name: "signInWithCredential"
            Parameter { name: "ced"; type: "Credential" }
        }
        Method { name: "signOut" }
        Method {
            name: "updateUser"
            Parameter { name: "displayName"; type: "string" }
            Parameter { name: "picture"; type: "string" }
        }
        Method {
            name: "sendPasswordResetEmail"
            Parameter { name: "email"; type: "string" }
        }
        Method { name: "deleteUser" }
        Method {
            name: "updateEmail"
            Parameter { name: "email"; type: "string" }
        }
        Method {
            name: "updatePassword"
            Parameter { name: "password"; type: "string" }
        }
        Method { name: "signedIn"; type: "bool" }
        Method { name: "running"; type: "bool" }
        Method { name: "errorId"; type: "int" }
        Method { name: "errorMsg"; type: "string" }
        Method { name: "email"; type: "string" }
        Method { name: "displayName"; type: "string" }
        Method { name: "emailVerified"; type: "bool" }
        Method { name: "photoUrl"; type: "string" }
        Method { name: "uid"; type: "string" }
    }
    Component {
        name: "qmlio::googleFirebase::FirebaseDatabase"
        prototype: "QObject"
        exports: ["QmlioDatabase 1.0"]
        exportMetaObjectRevisions: [0]
        Enum {
            name: "Priority"
            values: {
                "Idle": 0,
                "Lowest": 1,
                "Low": 2,
                "Normal": 3,
                "High": 4,
                "Highest": 5,
                "Critictal": 6
            }
        }
        Property { name: "persist"; type: "bool" }
        Property { name: "prefix"; type: "QChar" }
        Property {
            name: "queries"
            type: "qmlio::googleFirebase::DatabaseQuery"
            isList: true
            isReadonly: true
        }
        Signal {
            name: "errorChanged"
            Parameter { name: "errorCode"; type: "int" }
            Parameter { name: "errorMsg"; type: "string" }
            Parameter { name: "tag"; type: "string" }
        }
        Signal {
            name: "databaseInitialized"
            Parameter { name: "ready"; type: "bool" }
        }
        Method { name: "key"; type: "string" }
        Method { name: "timeStamp"; type: "qlonglong" }
        Method {
            name: "truncate"
            type: "double"
            Parameter { name: "d"; type: "double&" }
            Parameter { name: "numberOfDecimalsToKeep"; type: "uint" }
        }
        Method {
            name: "fromJsonObjectToArray"
            type: "QVariantList"
            Parameter { name: "json"; type: "QVariant" }
        }
        Method {
            name: "v"
            Parameter { name: "d"; type: "Task"; isPointer: true }
        }
    }
    Component {
        name: "qmlio::googleFirebase::FirebaseStorage"
        prototype: "QObject"
        exports: ["QmlioStorage 1.0"]
        exportMetaObjectRevisions: [0]
        Enum {
            name: "Priority"
            values: {
                "Idle": 0,
                "Lowest": 1,
                "Low": 2,
                "Normal": 3,
                "High": 4,
                "Highest": 5,
                "Critictal": 6
            }
        }
        Property {
            name: "queries"
            type: "qmlio::googleFirebase::StorageQuery"
            isList: true
            isReadonly: true
        }
        Signal {
            name: "errorChanged"
            Parameter { name: "errorCode"; type: "int" }
            Parameter { name: "errorMsg"; type: "string" }
            Parameter { name: "tag"; type: "string" }
        }
        Signal {
            name: "initialised"
            Parameter { name: "ready"; type: "bool" }
        }
    }
    Component {
        name: "qmlio::googleFirebase::StorageQuery"
        prototype: "QObject"
        exports: ["StorageQuery 1.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "tag"; type: "string" }
        Property { name: "parentStorage"; type: "FirebaseStorage"; isPointer: true }
        Property { name: "priority"; type: "FirebaseStorage::Priority" }
        Signal {
            name: "transferedSizeChanged"
            Parameter { name: "size"; type: "qlonglong" }
        }
        Signal {
            name: "totalSizeChanged"
            Parameter { name: "size"; type: "qlonglong" }
        }
        Signal {
            name: "resumed"
            Parameter { name: "size"; type: "qlonglong" }
        }
        Signal {
            name: "paused"
            Parameter { name: "size"; type: "qlonglong" }
        }
        Signal { name: "cancelled" }
        Signal { name: "uploadComplete" }
        Signal {
            name: "downloadComplete"
            Parameter { name: "path"; type: "string" }
        }
        Signal {
            name: "linkGenerated"
            Parameter { name: "link"; type: "string" }
        }
        Method {
            name: "child"
            type: "qmlio::googleFirebase::StorageQuery*"
            Parameter { name: "val"; type: "string" }
        }
        Method { name: "currentPath"; type: "QStringList" }
        Method {
            name: "putFile"
            Parameter { name: "file"; type: "QVariant" }
        }
        Method {
            name: "progressing"
            Parameter { name: "controller"; type: "ControllerWrapper"; isPointer: true }
        }
        Method {
            name: "onPaused"
            Parameter { name: "controller"; type: "ControllerWrapper"; isPointer: true }
        }
        Method { name: "pause" }
        Method { name: "resume" }
        Method { name: "isPaused"; type: "bool" }
        Method { name: "isResumed"; type: "bool" }
        Method {
            name: "getLink"
            Parameter { name: "filename"; type: "string" }
        }
        Method {
            name: "downloadFile"
            Parameter { name: "path"; type: "string" }
        }
    }
}